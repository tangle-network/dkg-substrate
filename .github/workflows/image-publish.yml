name: Container Image Release

on:
  push:
    # Publish `master` as Container `edge` image.
    branches:
      - master
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
  pull_request:

env:
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: git

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get package version
        id: get_version
        run: echo ::set-output name=VERSION::$(grep "^version" ./standalone/node/Cargo.toml | egrep -o "([0-9\.]+)")

      - name: Restore Cache
        if: always()
        uses: actions/cache/restore@v3
        with:
          path: |
            /tmp/.buildx-cache
          key: ${{ runner.os }}-cargo-index-${{ github.ref_name }}-docker-image

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./docker/Standalone.Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/dkg-standalone-node:${{ steps.get_version.outputs.VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Save Cache
        if: ${{ !cancelled() }}
        uses: actions/cache/save@v3
        with:
          path: |
            /tmp/.buildx-cache
          key: ${{ runner.os }}-cargo-index-${{ github.ref_name }}-docker-image

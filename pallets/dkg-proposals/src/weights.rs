
//! Autogenerated weights for pallet_dkg_proposals
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-04-10, STEPS: `20`, REPEAT: `1`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/dkg-standalone-node
// benchmark
// pallet
// --chain=dev
// --steps=20
// --repeat=1
// --log=warn
// --pallet=pallet-dkg-proposals
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --output=./pallets/dkg-proposals/src/weights.rs
// --template=./.maintain/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_dkg_proposals.
pub trait WeightInfo {
	fn set_threshold(c: u32, ) -> Weight;
	fn set_resource(c: u32, ) -> Weight;
	fn remove_resource() -> Weight;
	fn whitelist_chain() -> Weight;
	fn add_proposer() -> Weight;
	fn remove_proposer() -> Weight;
	fn acknowledge_proposal(c: u32, ) -> Weight;
	fn reject_proposal(c: u32, ) -> Weight;
	fn eval_vote_state(c: u32, ) -> Weight;
}

/// Weights for pallet_dkg_proposals using the Substrate node and recommended hardware.
pub struct WebbWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for WebbWeight<T> {
	/// Storage: DKGProposals ProposerThreshold (r:0 w:1)
	/// Proof: DKGProposals ProposerThreshold (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// The range of component `c` is `[1, 500]`.
	fn set_threshold(_c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 7_000 nanoseconds.
		Weight::from_ref_time(8_057_832)
			.saturating_add(Weight::from_proof_size(0))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: DKGProposals Resources (r:0 w:1)
	/// Proof: DKGProposals Resources (max_values: None, max_size: Some(1034), added: 3509, mode: MaxEncodedLen)
	/// The range of component `c` is `[1, 500]`.
	fn set_resource(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 4_000 nanoseconds.
		Weight::from_ref_time(4_357_198)
			.saturating_add(Weight::from_proof_size(0))
			// Standard Error: 899
			.saturating_add(Weight::from_ref_time(771).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: DKGProposals Resources (r:0 w:1)
	/// Proof: DKGProposals Resources (max_values: None, max_size: Some(1034), added: 3509, mode: MaxEncodedLen)
	fn remove_resource() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 4_000 nanoseconds.
		Weight::from_ref_time(4_000_000)
			.saturating_add(Weight::from_proof_size(0))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: DKGProposals ChainNonces (r:1 w:1)
	/// Proof: DKGProposals ChainNonces (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	fn whitelist_chain() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `313`
		//  Estimated: `2511`
		// Minimum execution time: 15_000 nanoseconds.
		Weight::from_ref_time(15_000_000)
			.saturating_add(Weight::from_proof_size(2511))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: DKGProposals Proposers (r:1 w:1)
	/// Proof: DKGProposals Proposers (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	/// Storage: DKGProposals ProposerCount (r:1 w:1)
	/// Proof: DKGProposals ProposerCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: DKGProposals ExternalProposerAccounts (r:0 w:1)
	/// Proof: DKGProposals ExternalProposerAccounts (max_values: None, max_size: Some(1050), added: 3525, mode: MaxEncodedLen)
	fn add_proposer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `375`
		//  Estimated: `3023`
		// Minimum execution time: 18_000 nanoseconds.
		Weight::from_ref_time(18_000_000)
			.saturating_add(Weight::from_proof_size(3023))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: DKGProposals Proposers (r:1 w:1)
	/// Proof: DKGProposals Proposers (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	/// Storage: DKGProposals ProposerCount (r:1 w:1)
	/// Proof: DKGProposals ProposerCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: DKGProposals ExternalProposerAccounts (r:0 w:1)
	/// Proof: DKGProposals ExternalProposerAccounts (max_values: None, max_size: Some(1050), added: 3525, mode: MaxEncodedLen)
	fn remove_proposer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `429`
		//  Estimated: `3023`
		// Minimum execution time: 18_000 nanoseconds.
		Weight::from_ref_time(18_000_000)
			.saturating_add(Weight::from_proof_size(3023))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: DKGProposals Proposers (r:1 w:0)
	/// Proof: DKGProposals Proposers (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	/// Storage: DKGProposals ChainNonces (r:1 w:0)
	/// Proof: DKGProposals ChainNonces (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: DKGProposals Resources (r:1 w:0)
	/// Proof: DKGProposals Resources (max_values: None, max_size: Some(1034), added: 3509, mode: MaxEncodedLen)
	/// Storage: DKGProposals Votes (r:1 w:1)
	/// Proof: DKGProposals Votes (max_values: None, max_size: Some(6473), added: 8948, mode: MaxEncodedLen)
	/// Storage: DKGProposals ProposerThreshold (r:1 w:0)
	/// Proof: DKGProposals ProposerThreshold (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: DKGProposals ProposerCount (r:1 w:0)
	/// Proof: DKGProposals ProposerCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// The range of component `c` is `[1, 500]`.
	fn acknowledge_proposal(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1224`
		//  Estimated: `18490`
		// Minimum execution time: 37_000 nanoseconds.
		Weight::from_ref_time(38_298_915)
			.saturating_add(Weight::from_proof_size(18490))
			// Standard Error: 1_652
			.saturating_add(Weight::from_ref_time(204).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: DKGProposals Proposers (r:1 w:0)
	/// Proof: DKGProposals Proposers (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	/// Storage: DKGProposals ChainNonces (r:1 w:0)
	/// Proof: DKGProposals ChainNonces (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: DKGProposals Resources (r:1 w:0)
	/// Proof: DKGProposals Resources (max_values: None, max_size: Some(1034), added: 3509, mode: MaxEncodedLen)
	/// Storage: DKGProposals Votes (r:1 w:1)
	/// Proof: DKGProposals Votes (max_values: None, max_size: Some(6473), added: 8948, mode: MaxEncodedLen)
	/// Storage: DKGProposals ProposerThreshold (r:1 w:0)
	/// Proof: DKGProposals ProposerThreshold (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: DKGProposals ProposerCount (r:1 w:0)
	/// Proof: DKGProposals ProposerCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// The range of component `c` is `[1, 500]`.
	fn reject_proposal(_c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1224`
		//  Estimated: `18490`
		// Minimum execution time: 37_000 nanoseconds.
		Weight::from_ref_time(38_014_969)
			.saturating_add(Weight::from_proof_size(18490))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: DKGProposals Votes (r:1 w:1)
	/// Proof: DKGProposals Votes (max_values: None, max_size: Some(6473), added: 8948, mode: MaxEncodedLen)
	/// Storage: DKGProposals ProposerThreshold (r:1 w:0)
	/// Proof: DKGProposals ProposerThreshold (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: DKGProposals ProposerCount (r:1 w:0)
	/// Proof: DKGProposals ProposerCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// The range of component `c` is `[1, 500]`.
	fn eval_vote_state(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `682`
		//  Estimated: `9946`
		// Minimum execution time: 17_000 nanoseconds.
		Weight::from_ref_time(17_299_376)
			.saturating_add(Weight::from_proof_size(9946))
			// Standard Error: 1_014
			.saturating_add(Weight::from_ref_time(1_002).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: DKGProposals ProposerThreshold (r:0 w:1)
	/// Proof: DKGProposals ProposerThreshold (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// The range of component `c` is `[1, 500]`.
	fn set_threshold(_c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 7_000 nanoseconds.
		Weight::from_ref_time(8_057_832)
			.saturating_add(Weight::from_proof_size(0))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: DKGProposals Resources (r:0 w:1)
	/// Proof: DKGProposals Resources (max_values: None, max_size: Some(1034), added: 3509, mode: MaxEncodedLen)
	/// The range of component `c` is `[1, 500]`.
	fn set_resource(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 4_000 nanoseconds.
		Weight::from_ref_time(4_357_198)
			.saturating_add(Weight::from_proof_size(0))
			// Standard Error: 899
			.saturating_add(Weight::from_ref_time(771).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: DKGProposals Resources (r:0 w:1)
	/// Proof: DKGProposals Resources (max_values: None, max_size: Some(1034), added: 3509, mode: MaxEncodedLen)
	fn remove_resource() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 4_000 nanoseconds.
		Weight::from_ref_time(4_000_000)
			.saturating_add(Weight::from_proof_size(0))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: DKGProposals ChainNonces (r:1 w:1)
	/// Proof: DKGProposals ChainNonces (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	fn whitelist_chain() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `313`
		//  Estimated: `2511`
		// Minimum execution time: 15_000 nanoseconds.
		Weight::from_ref_time(15_000_000)
			.saturating_add(Weight::from_proof_size(2511))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: DKGProposals Proposers (r:1 w:1)
	/// Proof: DKGProposals Proposers (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	/// Storage: DKGProposals ProposerCount (r:1 w:1)
	/// Proof: DKGProposals ProposerCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: DKGProposals ExternalProposerAccounts (r:0 w:1)
	/// Proof: DKGProposals ExternalProposerAccounts (max_values: None, max_size: Some(1050), added: 3525, mode: MaxEncodedLen)
	fn add_proposer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `375`
		//  Estimated: `3023`
		// Minimum execution time: 18_000 nanoseconds.
		Weight::from_ref_time(18_000_000)
			.saturating_add(Weight::from_proof_size(3023))
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: DKGProposals Proposers (r:1 w:1)
	/// Proof: DKGProposals Proposers (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	/// Storage: DKGProposals ProposerCount (r:1 w:1)
	/// Proof: DKGProposals ProposerCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: DKGProposals ExternalProposerAccounts (r:0 w:1)
	/// Proof: DKGProposals ExternalProposerAccounts (max_values: None, max_size: Some(1050), added: 3525, mode: MaxEncodedLen)
	fn remove_proposer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `429`
		//  Estimated: `3023`
		// Minimum execution time: 18_000 nanoseconds.
		Weight::from_ref_time(18_000_000)
			.saturating_add(Weight::from_proof_size(3023))
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: DKGProposals Proposers (r:1 w:0)
	/// Proof: DKGProposals Proposers (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	/// Storage: DKGProposals ChainNonces (r:1 w:0)
	/// Proof: DKGProposals ChainNonces (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: DKGProposals Resources (r:1 w:0)
	/// Proof: DKGProposals Resources (max_values: None, max_size: Some(1034), added: 3509, mode: MaxEncodedLen)
	/// Storage: DKGProposals Votes (r:1 w:1)
	/// Proof: DKGProposals Votes (max_values: None, max_size: Some(6473), added: 8948, mode: MaxEncodedLen)
	/// Storage: DKGProposals ProposerThreshold (r:1 w:0)
	/// Proof: DKGProposals ProposerThreshold (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: DKGProposals ProposerCount (r:1 w:0)
	/// Proof: DKGProposals ProposerCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// The range of component `c` is `[1, 500]`.
	fn acknowledge_proposal(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1224`
		//  Estimated: `18490`
		// Minimum execution time: 37_000 nanoseconds.
		Weight::from_ref_time(38_298_915)
			.saturating_add(Weight::from_proof_size(18490))
			// Standard Error: 1_652
			.saturating_add(Weight::from_ref_time(204).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: DKGProposals Proposers (r:1 w:0)
	/// Proof: DKGProposals Proposers (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	/// Storage: DKGProposals ChainNonces (r:1 w:0)
	/// Proof: DKGProposals ChainNonces (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: DKGProposals Resources (r:1 w:0)
	/// Proof: DKGProposals Resources (max_values: None, max_size: Some(1034), added: 3509, mode: MaxEncodedLen)
	/// Storage: DKGProposals Votes (r:1 w:1)
	/// Proof: DKGProposals Votes (max_values: None, max_size: Some(6473), added: 8948, mode: MaxEncodedLen)
	/// Storage: DKGProposals ProposerThreshold (r:1 w:0)
	/// Proof: DKGProposals ProposerThreshold (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: DKGProposals ProposerCount (r:1 w:0)
	/// Proof: DKGProposals ProposerCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// The range of component `c` is `[1, 500]`.
	fn reject_proposal(_c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1224`
		//  Estimated: `18490`
		// Minimum execution time: 37_000 nanoseconds.
		Weight::from_ref_time(38_014_969)
			.saturating_add(Weight::from_proof_size(18490))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: DKGProposals Votes (r:1 w:1)
	/// Proof: DKGProposals Votes (max_values: None, max_size: Some(6473), added: 8948, mode: MaxEncodedLen)
	/// Storage: DKGProposals ProposerThreshold (r:1 w:0)
	/// Proof: DKGProposals ProposerThreshold (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: DKGProposals ProposerCount (r:1 w:0)
	/// Proof: DKGProposals ProposerCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// The range of component `c` is `[1, 500]`.
	fn eval_vote_state(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `682`
		//  Estimated: `9946`
		// Minimum execution time: 17_000 nanoseconds.
		Weight::from_ref_time(17_299_376)
			.saturating_add(Weight::from_proof_size(9946))
			// Standard Error: 1_014
			.saturating_add(Weight::from_ref_time(1_002).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
}
